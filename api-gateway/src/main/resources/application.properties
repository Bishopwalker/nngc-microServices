eureka.client.service-url.defaultZone=http://localhost:8761/eureka/
eureka.client.fetch-registry=true
eureka.client.register-with-eureka=true
eureka.instance.prefer-ip-address=true
management.endpoints.web.exposure.include=health,info,gateway
management.endpoint.health.show-details=always
server.port=8088
spring.application.name=api-gateway
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=http://localhost:8080/realms/nngc-realm/protocol/openid-connect/certs
spring.security.oauth2.resourceserver.jwt.issuer-uri=http://localhost:8080/realms/nngc-realm
spring.security.oauth2.client.registration.keycloak.client-id=api-gateway
spring.security.oauth2.client.registration.keycloak.client-secret=api-gateway-secret
spring.security.oauth2.client.registration.keycloak.authorization-grant-type=client_credentials
spring.security.oauth2.client.registration.keycloak.scope=openid,profile
spring.security.oauth2.client.provider.keycloak.issuer-uri=http://localhost:8080/realms/nngc-realm
spring.security.oauth2.client.provider.keycloak.token-uri=http://localhost:8080/realms/nngc-realm/protocol/openid-connect/token
spring.cloud.gateway.discovery.locator.enabled=true
spring.cloud.gateway.discovery.locator.lower-case-service-id=true
# Customer Service Route
spring.cloud.gateway.routes[0].id=customer-service
spring.cloud.gateway.routes[0].uri=lb://customer-service
spring.cloud.gateway.routes[0].predicates[0]=Path=/api/customers/**
spring.cloud.gateway.routes[0].filters[0]=StripPrefix=1
spring.cloud.gateway.routes[0].filters[1].name=CircuitBreaker
spring.cloud.gateway.routes[0].filters[1].args.name=customer-service
spring.cloud.gateway.routes[0].filters[1].args.fallbackUri=forward:/fallback

# Token Service Route
spring.cloud.gateway.routes[1].id=token-service
spring.cloud.gateway.routes[1].uri=lb://token-service
spring.cloud.gateway.routes[1].predicates[0]=Path=/api/auth/**
spring.cloud.gateway.routes[1].filters[0]=StripPrefix=1
spring.cloud.gateway.routes[1].filters[1].name=CircuitBreaker
spring.cloud.gateway.routes[1].filters[1].args.name=token-service
spring.cloud.gateway.routes[1].filters[1].args.fallbackUri=forward:/fallback

# Stripe Service Route
spring.cloud.gateway.routes[2].id=stripe-service
spring.cloud.gateway.routes[2].uri=lb://stripe-service
spring.cloud.gateway.routes[2].predicates[0]=Path=/api/payments/**
spring.cloud.gateway.routes[2].filters[0]=StripPrefix=1
spring.cloud.gateway.routes[2].filters[1].name=CircuitBreaker
spring.cloud.gateway.routes[2].filters[1].args.name=stripe-service
spring.cloud.gateway.routes[2].filters[1].args.fallbackUri=forward:/fallback

# Email Service Route
spring.cloud.gateway.routes[3].id=email-service
spring.cloud.gateway.routes[3].uri=lb://email-service
spring.cloud.gateway.routes[3].predicates[0]=Path=/api/email/**
spring.cloud.gateway.routes[3].filters[0]=StripPrefix=1
spring.cloud.gateway.routes[3].filters[1].name=CircuitBreaker
spring.cloud.gateway.routes[3].filters[1].args.name=email-service
spring.cloud.gateway.routes[3].filters[1].args.fallbackUri=forward:/fallback

# Google Service Route
spring.cloud.gateway.routes[4].id=google-service
spring.cloud.gateway.routes[4].uri=lb://google-service
spring.cloud.gateway.routes[4].predicates[0]=Path=/api/google/**
spring.cloud.gateway.routes[4].filters[0]=StripPrefix=1
spring.cloud.gateway.routes[4].filters[1].name=CircuitBreaker
spring.cloud.gateway.routes[4].filters[1].args.name=google-service
spring.cloud.gateway.routes[4].filters[1].args.fallbackUri=forward:/fallback

# Registration Service Route
spring.cloud.gateway.routes[5].id=registration-service
spring.cloud.gateway.routes[5].uri=lb://registration-service
spring.cloud.gateway.routes[5].predicates[0]=Path=/auth/nngc/**
spring.cloud.gateway.routes[5].filters[0].name=CircuitBreaker
spring.cloud.gateway.routes[5].filters[0].args.name=registration-service
spring.cloud.gateway.routes[5].filters[0].args.fallbackUri=forward:/fallback

# Resilience4j Circuit Breaker Configuration
# Default configuration for all circuit breakers
resilience4j.circuitbreaker.configs.default.registerHealthIndicator=true
resilience4j.circuitbreaker.configs.default.slidingWindowSize=10
resilience4j.circuitbreaker.configs.default.minimumNumberOfCalls=5
resilience4j.circuitbreaker.configs.default.permittedNumberOfCallsInHalfOpenState=3
resilience4j.circuitbreaker.configs.default.automaticTransitionFromOpenToHalfOpenEnabled=true
resilience4j.circuitbreaker.configs.default.waitDurationInOpenState=5s
resilience4j.circuitbreaker.configs.default.failureRateThreshold=50
resilience4j.circuitbreaker.configs.default.eventConsumerBufferSize=10

# Specific configuration for customer-service
resilience4j.circuitbreaker.instances.customer-service.baseConfig=default
resilience4j.circuitbreaker.instances.customer-service.slidingWindowSize=5

# Specific configuration for token-service
resilience4j.circuitbreaker.instances.token-service.baseConfig=default
resilience4j.circuitbreaker.instances.token-service.waitDurationInOpenState=10s

# Specific configuration for stripe-service
resilience4j.circuitbreaker.instances.stripe-service.baseConfig=default
resilience4j.circuitbreaker.instances.stripe-service.failureRateThreshold=60

# Specific configuration for email-service
resilience4j.circuitbreaker.instances.email-service.baseConfig=default

# Specific configuration for google-service
resilience4j.circuitbreaker.instances.google-service.baseConfig=default

# Specific configuration for registration-service
resilience4j.circuitbreaker.instances.registration-service.baseConfig=default

# Timeout configuration
resilience4j.timelimiter.configs.default.timeout-duration=3s
