eureka.client.service-url.defaultZone=http://localhost:8761/eureka/
eureka.client.fetch-registry=true
eureka.client.register-with-eureka=true
eureka.instance.prefer-ip-address=true
management.endpoints.web.exposure.include=health,info,gateway
management.endpoint.health.show-details=always
server.port=8088
spring.application.name=api-gateway
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=http://localhost:8080/realms/nngc-realm/protocol/openid-connect/certs
spring.security.oauth2.resourceserver.jwt.issuer-uri=http://localhost:8080/realms/nngc-realm
spring.security.oauth2.client.registration.keycloak.client-id=api-gateway
spring.security.oauth2.client.registration.keycloak.client-secret=api-gateway-secret
spring.security.oauth2.client.registration.keycloak.authorization-grant-type=client_credentials
spring.security.oauth2.client.registration.keycloak.scope=openid,profile
spring.security.oauth2.client.provider.keycloak.issuer-uri=http://localhost:8080/realms/nngc-realm
spring.security.oauth2.client.provider.keycloak.token-uri=http://localhost:8080/realms/nngc-realm/protocol/openid-connect/token
spring.cloud.gateway.discovery.locator.enabled=true
spring.cloud.gateway.discovery.locator.lower-case-service-id=true
spring.cloud.gateway.routes=[{id=customer-service, uri=lb://customer-service, predicates=[Path=/api/customers/**], filters=[StripPrefix=1]}, {id=token-service, uri=lb://token-service, predicates=[Path=/api/auth/**], filters=[StripPrefix=1]}, {id=stripe-service, uri=lb://stripe-service, predicates=[Path=/api/payments/**], filters=[StripPrefix=1]}, {id=email-service, uri=lb://email-service, predicates=[Path=/api/email/**], filters=[StripPrefix=1]}, {id=google-service, uri=lb://google-service, predicates=[Path=/api/google/**], filters=[StripPrefix=1]}, {id=registration-service, uri=lb://registration-service, predicates=[Path=/auth/nngc/**], filters=[{name=CircuitBreaker, args={name=registration-service}}]}]
