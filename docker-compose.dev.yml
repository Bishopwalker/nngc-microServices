services:
  # Service Registry (Eureka Server)
  service-registry:
    build:
      context: .
      dockerfile: service-registry/Dockerfile
      target: development  # If you have multi-stage build
    container_name: nngc-service-registry-dev
    restart: unless-stopped
    ports:
      - "8761:8761"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_DEVTOOLS_RESTART_ENABLED=true
    volumes:
      # Mount source code for hot reload
      - ./service-registry/src:/app/src:ro
      - ./service-registry/target/classes:/app/target/classes
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8761/actuator/health"]
      interval: 15s
      timeout: 5s
      retries: 3
      start_period: 20s
    networks:
      - nngc-network

  # API Gateway
  api-gateway:
    build:
      context: .
      dockerfile: api-gateway/Dockerfile
    container_name: nngc-api-gateway-dev
    restart: unless-stopped
    ports:
      - "8088:8088"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_DEVTOOLS_RESTART_ENABLED=true
      - EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE=http://service-registry:8761/eureka/
    volumes:
      - ./api-gateway/src:/app/src:ro
      - ./api-gateway/target/classes:/app/target/classes
    depends_on:
      service-registry:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8088/actuator/health"]
      interval: 15s
      timeout: 5s
      retries: 3
      start_period: 20s
    networks:
      - nngc-network

  # Registration Service
  registration-service:
    build:
      context: .
      dockerfile: registration-service/Dockerfile
    container_name: nngc-registration-service-dev
    restart: unless-stopped
    ports:
      - "8085:8085"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_DEVTOOLS_RESTART_ENABLED=true
      - EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE=http://service-registry:8761/eureka/
    volumes:
      - ./registration-service/src:/app/src:ro
      - ./registration-service/target/classes:/app/target/classes
    depends_on:
      service-registry:
        condition: service_healthy
      keycloak:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8085/actuator/health"]
      interval: 15s
      timeout: 5s
      retries: 3
      start_period: 20s
    networks:
      - nngc-network

  # Customer Service
  customer-service:
    build:
      context: .
      dockerfile: customer-service/Dockerfile
    container_name: nngc-customer-service-dev
    restart: unless-stopped
    ports:
      - "8081:8081"
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_DEVTOOLS_RESTART_ENABLED=true
      - EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE=http://service-registry:8761/eureka/
    volumes:
      - ./customer-service/src:/app/src:ro
      - ./customer-service/target/classes:/app/target/classes
    depends_on:
      service-registry:
        condition: service_healthy
      keycloak:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8081/actuator/health"]
      interval: 15s
      timeout: 5s
      retries: 3
      start_period: 20s
    networks:
      - nngc-network

  # Include Keycloak and other infrastructure
  keycloak:
    image: quay.io/keycloak/keycloak:22.0
    container_name: keycloak-nngc-dev
    restart: unless-stopped
    ports:
      - "8080:8080"
    environment:
      - KEYCLOAK_ADMIN=admin
      - KEYCLOAK_ADMIN_PASSWORD=admin123
      - KC_DB=postgres
      - KC_DB_URL=jdbc:postgresql://keycloak-postgres:5432/keycloak
      - KC_DB_USERNAME=keycloak
      - KC_DB_PASSWORD=keycloak123
    command: start-dev
    depends_on:
      keycloak-postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
    volumes:
      - ./keycloak/realms:/opt/keycloak/data/import
    networks:
      - nngc-network

  keycloak-postgres:
    image: postgres:15
    container_name: keycloak-postgres-dev
    restart: unless-stopped
    ports:
      - "5433:5432"
    environment:
      - POSTGRES_DB=keycloak
      - POSTGRES_USER=keycloak
      - POSTGRES_PASSWORD=keycloak123
    volumes:
      - keycloak_postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U keycloak"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - nngc-network

volumes:
  keycloak_postgres_data:

networks:
  nngc-network:
    driver: bridge